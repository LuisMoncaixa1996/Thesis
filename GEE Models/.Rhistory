res1 = geese(PEX~Lat, id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable")
summary(res1)
fit <- geeglm(PEX ~ Idade + Sexo + Lat, id=Processo, data=base_de_dados_PEX_corrigida19fev2018,
family=binomial, corstr="AR-M", scale.fix=TRUE)
QIC(fit)
data = base_de_dados_PEX_corrigida19fev2018
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)`
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable")
summary(res)
#library(geepack)
#res1 = geese(PEX~Lat, id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable")
#summary(res1)
#fit <- geeglm(PEX ~ Idade + Sexo + Lat, id=Processo, data=base_de_dados_PEX_corrigida19fev2018,
#family=binomial, corstr="AR-M", scale.fix=TRUE)
#QIC(fit)
data = base_de_dados_PEX_corrigida19fev2018
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)`
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable", na.action = na.omit())
data = base_de_dados_PEX_corrigida19fev2018
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)`
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable", na.action = na.omit)
summary(res)
#library(geepack)
#res1 = geese(PEX~Lat, id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable")
#summary(res1)
#fit <- geeglm(PEX ~ Idade + Sexo + Lat, id=Processo, data=base_de_dados_PEX_corrigida19fev2018,
#family=binomial, corstr="AR-M", scale.fix=TRUE)
#QIC(fit)
data = base_de_dados_PEX_corrigida19fev2018
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)`
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable", na.action = na.omit)
summary(res)
library(geepack)
res1 = geese(res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable", na.action = na.omit))
View(base_de_dados_PEX_corrigida19fev2018)
data = base_de_dados_PEX_corrigida19fev2018
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)`
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable", na.action = na.omit)
summary(res)
library(geepack)
res1 = geese(res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo , data = data, family = binomial, corstr = "exchangeable"))
knitr::opts_chunk$set(echo = TRUE)
data = base_de_dados_PEX_corrigida19fev2018
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)`
data(ohio)
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable", na.action = na.omit)
summary(res)
library(geepack)
res1 = geese(res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo , data = data, family = binomial, corstr = "exchangeable"))
force(ohio)
View(ohio)
data = base_de_dados_PEX_corrigida19fev2018
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)`
data(ohio)
age:smoke
data = base_de_dados_PEX_corrigida19fev2018
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)`
data(ohio)
data$age:data$smoke
data = base_de_dados_PEX_corrigida19fev2018
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)`
data2 = data(ohio)
data2$age:data2$smoke
data = base_de_dados_PEX_corrigida19fev2018
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)
data(ohio)
ohio$age:ohio$smoke
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable", na.action = na.omit)
data = base_de_dados_PEX_corrigida19fev2018
data$`Dil pp (mm)` = Dilpp
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] = Dilpp
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable", na.action = na.omit)
View(data)
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable", na.action = na.omit)
View(data)
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + LIO(Dp) + Internos + Local_da_LIO) , id = Processo, data = base_de_dados_PEX_corrigida19fev2018, family = binomial, corstr = "exchangeable", na.action = na.omit)
summary(res)
library(geepack)
res1 = geese(res = gee(PEX~(Idade + Sexo + Lat + `Dil pp (mm)` + `LIO (Dp)` + Internos + `Local da LIO`) , id = Processo , data = data, family = binomial, corstr = "exchangeable"))
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
base_de_dados_PEX_corrigida19fev2018$`Dil pp (mm)
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + LIO(Dp) + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial, corstr = "exchangeable", na.action = na.omit)
summary(res)
library(geepack)
res1 = geese(res = gee(PEX~(Idade + Sexo + Lat + Dilpp + LIO(Dp) + Internos + Local_da_LIO) , id = Processo , data = data, family = binomial, corstr = "exchangeable"))
summary(res1)
#fit <- geeglm(PEX ~ Idade + Sexo + Lat, id=Processo, data=base_de_dados_PEX_corrigida19fev2018,
#family=binomial, corstr="AR-M", scale.fix=TRUE)
#QIC(fit)
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + LIO(Dp) + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial, corstr = "exchangeable", na.action = na.omit)
View(data)
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + LIO(Dp) + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial, corstr = "exchangeable", na.action = na.omit)
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + LIO(Dp) + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial, corstr = "exchangeable")
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial, corstr = "exchangeable")
summary(res)
library(geepack)
res1 = geese(res = gee(PEX~(Idade + Sexo + Lat + Dilpp + LIO(Dp) + Internos + Local_da_LIO) , id = Processo , data = data, family = binomial, corstr = "exchangeable"))
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial, corstr = "exchangeable")
summary(res)
library(geepack)
res1 = geese(PEX~(Idade + Sexo + Lat + Dilpp + LIO(Dp) + Internos + Local_da_LIO) , id = Processo , data = data, family = binomial, corstr = "exchangeable")
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial, corstr = "exchangeable")
summary(res)
library(geepack)
res1 = geese(PEX~(Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo , data = data, family = binomial, corstr = "exchangeable")
summary(res1)
#fit <- geeglm(PEX ~ Idade + Sexo + Lat, id=Processo, data=base_de_dados_PEX_corrigida19fev2018,
#family=binomial, corstr="AR-M", scale.fix=TRUE)
#QIC(fit)
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
ohio$age:ohio$smoke
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial, corstr = "exchangeable")
summary(res)
library(geepack)
res1 = geese(PEX~(Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo , data = data, family = binomial, corstr = "exchangeable")
summary(res1)
#fit <- geeglm(PEX ~ Idade + Sexo + Lat, id=Processo, data=base_de_dados_PEX_corrigida19fev2018,
#family=binomial, corstr="AR-M", scale.fix=TRUE)
#QIC(fit)
View(ohio)
View(data)
View(data)
knitr::opts_chunk$set(echo = TRUE)
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
data1 = data[["Processo", "Idade", "Sexo", "Lat","PEX","Dilpp","Internos","Local_da_LIO"]]
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
data1 = data[,c("Processo", "Idade", "Sexo", "Lat","PEX","Dilpp","Internos","Local_da_LIO")]
View(data1)
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
data1 = data[,c("Processo", "Idade", "Sexo", "Lat","PEX","Dilpp","Internos","Local_da_LIO")]
split1<- sample(c(rep(0, 0.7 * nrow(data1)), rep(1, 0.3 * nrow(data1))))
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
data1 = data[,c("Processo", "Idade", "Sexo", "Lat","PEX","Dilpp","Internos","Local_da_LIO")]
split1<- sample(c(rep(0, 0.7 * nrow(data1)), rep(1, 0.3 * nrow(data1))))
train <- data[split1 == 0,]
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
data1 = data[,c("Processo", "Idade", "Sexo", "Lat","PEX","Dilpp","Internos","Local_da_LIO")]
split1<- sample(c(rep(0, 0.7 * nrow(data1)), rep(1, 0.3 * nrow(data1))))
train <- data1[split1 == 0,]
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO(Dp)"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
data1 = data[,c("Processo", "Idade", "Sexo", "Lat","PEX","Dilpp","Internos","Local_da_LIO")]
split1<- sample(c(rep(0, 0.7 * nrow(data1)), rep(1, 0.3 * nrow(data1))))
train <- data1[split1 == 0, ]
View(data1)
split1<- sample(c(rep(0, 0.7 * nrow(data1)), rep(1, 0.3 * nrow(data1))))
View(data1)
library('proc')
install.packages(proc)
install.packages(pROC)
install.packages('pROC')
library('pROC')
roc(PEX ~ (Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO), data = data)
roc(PEX ~ (Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO), data = data, plot = TRUE)
roc(res, data = data, plot = TRUE)
roc(res)
View(res)
I(age)
I(data$Idade)
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial, corstr = "exchangeable")
summary(res)
roc(res)
library(gee)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial, corstr = "exchangeable")
summary(res)
library(geepack)
res1 = geese(PEX~(I(Idade) + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo , data = data, family = binomial, corstr = "exchangeable")
summary(res1)
I(data$Idade)
View(res)
View(res1)
res = gee(PEX~(Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo, data = data, family = binomial(link = "logit"), corstr = "exchangeable", scale.fix = TRUE,scale.value = 1)
summary(res)
library(gee)
res = gee(PEX~Idade + Sexo + Lat , id = Processo, data = data, family = binomial(link = "logit"), corstr = "exchangeable", scale.fix = TRUE,scale.value = 1)
summary(res)
library(gee)
res = gee(PEX~Lat + Local_da_LIO + Dilpp , id = Processo, data = data, family = binomial(link = "logit"), corstr = "exchangeable", scale.fix = TRUE,scale.value = 1)
summary(res)
library(gee)
res = gee(PEX~Lat + Local_da_LIO + Dilpp , id = Processo, data = data, family = binomial(link = "logit"), corstr = "exchangeable", scale.fix = TRUE,scale.value = 1)
summary(res)
library(gee)
res = gee(PEX~Lat + Local_da_LIO + Dilpp , id = Processo, data = data, family = binomial(link = "logit"), corstr = "exchangeable", scale.fix = TRUE,scale.value = 1)
summary(res)
library(geepack)
res1 = geese(PEX~Lat + Dilpp + Local_da_LIO) , id = Processo , data = data, family = binomial, corstr = "exchangeable")
library(gee)
res = gee(PEX~Lat + Local_da_LIO + Dilpp , id = Processo, data = data, family = binomial(link = "logit"), corstr = "exchangeable", scale.fix = TRUE,scale.value = 1)
summary(res)
library(geepack)
res1 = geese(PEX~Lat + Dilpp + Local_da_LIO , id = Processo , data = data, family = binomial, corstr = "exchangeable")
summary(res1)
library(gee)
res = gee(PEX~LIO(Dp) , id = Processo, data = data, family = binomial(link = "logit"), corstr = "exchangeable", scale.fix = TRUE,scale.value = 1)
library(gee)
res = gee(PEX~ na.omit(LIO(Dp)) , id = Processo, data = data, family = binomial(link = "logit"), corstr = "exchangeable", scale.fix = TRUE,scale.value = 1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(caTools)
library(pROC)
library(geepack)
library(spind)
library(gee)
library(ROCR)
library(MESS)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(caTools)
library(pROC)
library(geepack)
library(spind)
library(gee)
library(ROCR)
library(MESS)
#Carregamento do dataset e criação dos datasets de teste e treino.
#Os datasets foram divididos de três formas diferentes. (80% - Treino / 20% - Teste) (75% - Treino/ 25% - Teste) (70% - Treino/ 30% - Teste)
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO_Dp"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
smp_size <- floor(0.80 * nrow(data))
smp_size2 <- floor(0.70 * nrow(data))
smp_size3 <- floor(0.75 * nrow(data))
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
train_ind2 <- sample(seq_len(nrow(data)),size = smp_size2)
train_ind3 <- sample(seq_len(nrow(data)),size = smp_size3)
train_80 <- data[train_ind, ]
train_75 <- data[train_ind3,]
train_70 <- data[train_ind2,]
test_80 <- data[-train_ind, ]
test_75 <- data[-train_ind3, ]
test_70 <- data[-train_ind2, ]
#Tabela para comparação das diferentes métricas
tab = matrix(nrow = 3,ncol = 2)
colnames(tab) = c("ACC","AUC")
rownames(tab) = c("Modelo_70/30","Modelo_75/25","Modelo_80/20")
tab2 = matrix(nrow = 3,ncol = 2)
colnames(tab2) = c("ACC","AUC")
rownames(tab2) = c("Modelo_All","Modelo_CP","Modelo_LO")
#MODELO CONSIDERANDO TODAS AS COVARIÁVEIS
#Foram utilizados dois packages de modo a realizar os modelos GEE (GEE & Geepack). Os packages permitem verficar qual a melhor estrutura de correlação através do valor de QIC.
#MODELOS 70_30
#GEEPACK models com diferentes estruturas de correlação e respetivos valores QIC
GEEPACK_Modelo_70_30_ex = geeglm(PEX~(I(Idade) + Sexo + Lat + Dilpp + Internos + Local_da_LIO ) , id = Processo , data = train_70, family = binomial, corstr = "exchangeable",scale.fix = TRUE)
summary(GEEPACK_Modelo_70_30_ex)
MESS::QIC(GEEPACK_Modelo_70_30_ex)
GEEPACK_Modelo_70_30_ar1 = geeglm(PEX~(I(Idade) + Sexo + Lat + Dilpp + Internos + Local_da_LIO ) , id = Processo , data = train_70, family = binomial, corstr = "ar1",scale.fix = TRUE)
summary(GEEPACK_Modelo_70_30_ar1)
MESS::QIC(GEEPACK_Modelo_70_30_ar1)
GEEPACK_Modelo_70_30_ind = geeglm(PEX~(I(Idade) + Sexo + Lat + Dilpp + Internos + Local_da_LIO ) , id = Processo , data = train_70, family = binomial, corstr = "independence",scale.fix = TRUE)
summary(GEEPACK_Modelo_70_30_ind)
MESS::QIC(GEEPACK_Modelo_70_30_ind)
#Como o valor de QIC é semelhante em todos os modelos para a análise ROC e do modelo GEE foi considerada a estrutura de correlação como "exchangeable"
#Modelo 75_25
GEEPACK_Modelo_75_25_ex = geeglm(PEX~(I(Idade) + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo , data = train_75, family = binomial, corstr = "exchangeable")
summary(GEEPACK_Modelo_75_25_ex)
MESS::QIC(GEEPACK_Modelo_75_25_ex)
GEEPACK_Modelo_75_25_ar1 = geeglm(PEX~(I(Idade) + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo , data = train_75, family = binomial, corstr = "ar1")
summary(GEEPACK_Modelo_75_25_ar1)
MESS::QIC(GEEPACK_Modelo_75_25_ar1)
GEEPACK_Modelo_75_25_ind = geeglm(PEX~(I(Idade) + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo , data = train_75, family = binomial, corstr = "independence")
summary(GEEPACK_Modelo_75_25_ind)
MESS::QIC(GEEPACK_Modelo_75_25_ind)
#Modelo 80_20
GEEPACK_Modelo_80_20_ex = geeglm(PEX~(I(Idade) + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo , data = train_80, family = binomial, corstr = "exchangeable")
summary(GEEPACK_Modelo_80_20_ex)
MESS::QIC(GEEPACK_Modelo_80_20_ex)
GEEPACK_Modelo_80_20_ar1 = geeglm(PEX~(I(Idade) + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo , data = train_80, family = binomial, corstr = "ar1")
summary(GEEPACK_Modelo_80_20_ar1)
MESS::QIC(GEEPACK_Modelo_80_20_ar1)
GEEPACK_Modelo_80_20_ind = geeglm(PEX~(Idade + Sexo + Lat + Dilpp + Internos + Local_da_LIO) , id = Processo , data = train_80, family = binomial, corstr = "independence")
summary(GEEPACK_Modelo_80_20_ind)
MESS::QIC(GEEPACK_Modelo_80_20_ind)
#Métricas para validação dos modelos e respetivas curvas ROC
#Modelo 70_30
library(ROCR)
pred_70_30 = predict(GEEPACK_Modelo_70_30_ex,test_70,type="response")
pred_70_30 = prediction(pred_70_30, test_70$PEX)
perf_70_30 = performance(pred_70_30, "acc")
#ACC
max_ind_70_30 = which.max(slot(perf_70_30, "y.values")[[1]] )
acc_70_30 = slot(perf_70_30, "y.values")[[1]][max_ind_70_30]
tab[1][1] = acc_70_30
#Curva ROC
roc_70_30 = performance(pred_70_30,"tpr","fpr")
plot(roc_70_30, colorize = T, lwd = 2)
auc_70_30 = performance(pred_70_30, measure = "auc")
tab[1,2]  = auc_70_30@y.values[[1]]
#Modelo 75_25
pred_75_25 = predict(GEEPACK_Modelo_75_25_ex,test_75,type="response")
pred_75_25 = prediction(pred_75_25, test_75$PEX)
perf_75_25 = performance(pred_75_25, "acc")
#ACC
max_ind_75_25 = which.max(slot(perf_75_25, "y.values")[[1]] )
acc_75_25 = slot(perf_75_25, "y.values")[[1]][max_ind_75_25]
tab[2,1] = acc_75_25
#Curva ROC
roc_75_25 = performance(pred_75_25,"tpr","fpr")
plot(roc_75_25, colorize = T, lwd = 2)
auc_75_25 = performance(pred_75_25, measure = "auc")
tab[2,2]  = auc_75_25@y.values[[1]]
#Modelo 80_20
pred_80_20 = predict(GEEPACK_Modelo_80_20_ex,test_80,type="response")
pred_80_20 = prediction(pred_80_20, test_80$PEX)
perf_80_20 = performance(pred_80_20, "acc")
#ACC
max_ind_80_20 = which.max(slot(perf_80_20, "y.values")[[1]] )
acc_80_20 = slot(perf_80_20, "y.values")[[1]][max_ind_80_20]
tab[3,1] = acc_80_20
#Curva ROC
roc_80_20 = performance(pred_80_20,"tpr","fpr")
plot(roc_80_20, colorize = T, lwd = 2)
auc_80_20 = performance(pred_80_20, measure = "auc")
tab[3,2]  = auc_80_20@y.values[[1]]
tab2[1,1]= acc_80_20
tab2[1,2]= auc_80_20@y.values[[1]]
tab
#Modelo considerando as caracteristicas pessoais
library(geepack)
Modelo_80_20_CP = geeglm(PEX~Idade + Sexo + Lat  , id = Processo , data = train_80, family = binomial, corstr = "exchangeable")
summary(Modelo_80_20_CP)
MESS::QIC(Modelo_80_20_CP)
pred_80_20_CP = predict(Modelo_80_20_CP,test_80,type="response")
pred_80_20_CP = prediction(pred_80_20_CP, test_80$PEX)
perf_80_20_CP = performance(pred_80_20_CP, "acc")
#ACC
max_ind_80_20_CP = which.max(slot(perf_80_20_CP, "y.values")[[1]] )
acc_80_20_CP = slot(perf_80_20_CP, "y.values")[[1]][max_ind_80_20_CP]
tab2[2,1] = acc_80_20_CP
#Curva ROC
roc_80_20_CP = performance(pred_80_20_CP,"tpr","fpr")
plot(roc_80_20_CP, colorize = T, lwd = 2)
auc_80_20_CP = performance(pred_80_20_CP, measure = "auc")
tab2[2,2]  = auc_80_20_CP@y.values[[1]]
tab2
#Modelo considerando a posicão da Lente Intra-Ocular.
library(geepack)
Modelo_80_20_LO = geeglm(PEX~Lat + Dilpp + Local_da_LIO , id = Processo , data = train_80, family = binomial, corstr = "exchangeable")
summary(Modelo_80_20_LO)
MESS::QIC(Modelo_80_20_LO)
pred_80_20_LO = predict(Modelo_80_20_LO,test_80,type="response")
pred_80_20_LO = prediction(pred_80_20_LO, test_80$PEX)
perf_80_20_LO = performance(pred_80_20_LO, "acc")
#ACC
max_ind_80_20_LO = which.max(slot(perf_80_20_LO, "y.values")[[1]] )
acc_80_20_LO = slot(perf_80_20_LO, "y.values")[[1]][max_ind_80_20_LO]
tab2[3,1] = acc_80_20_LO
#Curva ROC
roc_80_20_LO = performance(pred_80_20_LO,"tpr","fpr")
plot(roc_80_20_LO, colorize = T, lwd = 2)
auc_80_20_LO = performance(pred_80_20_LO, measure = "auc")
tab2[3,2]  = auc_80_20_LO@y.values[[1]]
tab2
library(gee)
GEE_Modelo_LO = gee(PEX~Local_da_LIO + Dilpp + LIO_Dp , id = Processo, data = data, family = binomial(link = "logit"), corstr = "exchangeable",scale.fix = T)
summary(GEE_Modelo_LO)
#Intervalos de confiança
ccgee = coef(summary(GEE_Modelo_LO))
citab_gee <- with(as.data.frame(ccgee),
cbind(lwr=Estimate-1.96*`Robust S.E.`,
upr=Estimate+1.96*`Robust S.E.`))
rownames(citab_gee) <- rownames(ccgee)
ccgee1 = as.data.frame(cbind(ccgee,citab_gee))
ccgee1
#Package GEEPACK
GEEPACK_Modelo_LO = geeglm(PEX ~ Local_da_LIO + Dilpp, id = Processo, data = data, family = binomial, corstr = "exchangeable",scale.fix = T)
summary(GEEPACK_Modelo_LO)
anova(GEEPACK_Modelo_LO)
#Intervalos de confiança
ccgeepack = coef(summary(GEEPACK_Modelo_LO))
citab_geepack <- with(as.data.frame(ccgeepack),
cbind(lwr=Estimate-1.96*Std.err,
upr=Estimate+1.96*Std.err))
rownames(citab_geepack) <- rownames(ccgeepack)
ccgeepack1 = as.data.frame(cbind(ccgeepack,citab_geepack))
ccgeepack1
View(ccgeepack1)
sapply(ccgeepack[,1], exp)
View(ccgeepack1)
exp(ccgeepack[1,1])
ccgeepack1$Estimate = (ccgeepack[,1], exp)
ccgeepack1$Estimate = (ccgeepack$Estimate, exp)
ccgeepack1$Estimate = exp(ccgeepack1$Estimate)
View(ccgeepack1)
ccgeepack1$lwr = exp(ccgeepack1$lwr)
ccgeepack1$upr = exp(ccgeepack1$upr)
View(ccgeepack1)
View(ccgee1)
knitr::opts_chunk$set(echo = TRUE)
#Carregamento do dataset e criação dos datasets de teste e treino.
#Os datasets foram divididos de três formas diferentes. (80% - Treino / 20% - Teste) (75% - Treino/ 25% - Teste) (70% - Treino/ 30% - Teste)
base_de_dados_PEX_corrigida19fev2018 <- read_excel("C:/Users/luism/OneDrive/Ambiente de Trabalho/Mestrado Bioinformática/Tese/Packages Study/Oftal DataBase/base de dados - PEX_corrigida19fev2018.xlsx")
library(dplyr)
library(caTools)
library(pROC)
library(geepack)
library(spind)
library(gee)
library(ROCR)
library(MESS)
library(readxl)
#Carregamento do dataset e criação dos datasets de teste e treino.
#Os datasets foram divididos de três formas diferentes. (80% - Treino / 20% - Teste) (75% - Treino/ 25% - Teste) (70% - Treino/ 30% - Teste)
base_de_dados_PEX_corrigida19fev2018 <- read_excel("C:/Users/luism/OneDrive/Ambiente de Trabalho/Mestrado Bioinformática/Tese/Packages Study/Oftal DataBase/base de dados - PEX_corrigida19fev2018.xlsx")
data = base_de_dados_PEX_corrigida19fev2018
names(data)[names(data) == "Dil pp (mm)"] <- "Dilpp"
names(data)[names(data) == "LIO (Dp)"] <- "LIO_Dp"
names(data)[names(data) == "Local da LIO"] <- "Local_da_LIO"
smp_size <- floor(0.80 * nrow(data))
smp_size2 <- floor(0.70 * nrow(data))
smp_size3 <- floor(0.75 * nrow(data))
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
train_ind2 <- sample(seq_len(nrow(data)),size = smp_size2)
train_ind3 <- sample(seq_len(nrow(data)),size = smp_size3)
train_80 <- data[train_ind, ]
train_75 <- data[train_ind3,]
train_70 <- data[train_ind2,]
test_80 <- data[-train_ind, ]
test_75 <- data[-train_ind3, ]
test_70 <- data[-train_ind2, ]
#Tabela para comparação das diferentes métricas
tab = matrix(nrow = 3,ncol = 2)
colnames(tab) = c("ACC","AUC")
rownames(tab) = c("Modelo_70/30","Modelo_75/25","Modelo_80/20")
tab2 = matrix(nrow = 3,ncol = 2)
colnames(tab2) = c("ACC","AUC")
rownames(tab2) = c("Modelo_All","Modelo_CP","Modelo_LO")
View(data)
